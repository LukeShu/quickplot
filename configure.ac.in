# Copyright (c) 2004  Lance Arsenault  <lanceman@bet.net>


# autoconf and automake to not allow variables (non-literals) in some
# macros (like AC_INIT).  Version numbers are required in more than
# one place so we define variables with @VARIABLES@ to be replaced
# using the program `./mkconfigure_ac' (from ./bootstrap) where
# configure.ac is produced from configure.ac.in.  This also lets me
# have variable variable names. Using the old AC_INIT syntax doesn't
# work either because it screws up the Makefile and config.h output
# when it is used.  Maybe this should be done with m4.  I don't know
# m4.  Maybe I just need to learn more about Autoconf, Automake and
# m4.


# require autoconf version
AC_PREREQ(2.58)


# AC_INIT( PACKAGE, VERSION, PACKAGE_BUGREPORT, TARNAME)
AC_INIT([@PACKAGE@],
 @VERSION_MAJOR@.@VERSION_MINOR@.@VERSION_MICRO@,
 [@EMAIL@],
 @TARNAME@)


#AM_INIT_AUTOMAKE(option1 option2 ...)
AM_INIT_AUTOMAKE(dist-bzip2)

AM_CONFIG_HEADER(config.h)


# Checks for programs.
missing_dir=`cd $ac_aux_dir && pwd`
AM_MISSING_PROG(ACLOCAL, aclocal, $missing_dir)
AM_MISSING_PROG(AUTOCONF, autoconf, $missing_dir)
AM_MISSING_PROG(AUTOMAKE, automake, $missing_dir)
AM_MISSING_PROG(AUTOHEADER, autoheader, $missing_dir)
AM_MISSING_PROG(MAKEINFO, makeinfo, $missing_dir)


AC_CONFIG_SRCDIR([config.h.in])


AC_PROG_CXX
#AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

# `info autoconf' says use this order
# -- checks for types
# -- checks for structures
# -- checks for compiler characteristics
# -- checks for library functions
# -- checks for system services


#########################################
#     check for program pkg-config
#########################################


AC_CHECK_PROG(PKGCONFIG, pkg-config, [yes], [no])
if  test "$PKGCONFIG" = "no" ; then
  AC_MSG_ERROR([

  You need the program pkg-config in your PATH.
  See: http://www.freedesktop.org/software/pkgconfig/
  for more information.  Without this it's hard to say
  what else you need.

configure failed.
])
fi


#########################################
#  Looking for packages using pkg-config
#########################################

pkg_lib_error=0

#########################################
#   check for package gtkmm
#########################################

gtkmm_need_version=2.2.6

echo -n "checking for gtkmm version >= $gtkmm_need_version ..."

# is gtkmm-2.0 there
if ! pkg-config --exists gtkmm-2.0 ; then
    pkg_lib_error=1
    echo
    AC_MSG_WARN([

  You need  gtkmm installed.  At least version $gtkmm_need_version
  The gtkmm home page is at http://www.gtkmm.org/

])

# is it at least version
elif ! pkg-config --atleast-version=$gtkmm_need_version gtkmm-2.0 ; then
   pkg_lib_error=1
   GTKMM_VERSION=$(pkg-config --modversion gtkmm-2.0)
   echo
   AC_MSG_WARN([

  You have version $GTKMM_VERSION of gtkmm.
  You need at least version $gtkmm_need_version of gtkmm.
  The gtkmm home page is at http://www.gtkmm.org/

])
else
  GTKMM_VERSION=$(pkg-config --modversion gtkmm-2.0)
  echo " yes"
fi


#########################################
#   check for package lib sndfile
#########################################

sndfile_need_version=1.0.5

echo -n "checking for lib sndfile version >= $sndfile_need_version ..."

# is it there
if ! pkg-config --exists sndfile ; then
    pkg_lib_error=1
    echo
    AC_MSG_WARN([

  You need lib sndfile installed.  At least version $sndfile_need_version
  The lib sndfile home page is at http://www.mega-nerd.com/libsndfile/

])

# is it at least version
elif ! pkg-config --atleast-version=$sndfile_need_version sndfile ; then
   pkg_lib_error=1
   SNDFILE_VERSION=$(pkg-config --modversion sndfile)
   echo
   AC_MSG_WARN([

  You have version $SNDFILE_VERSION of lib sndfile.
  You need at least version $sndfile_need_version of lib sndfile.
  The lib sndfile home page is at http://www.mega-nerd.com/libsndfile/

])
else
  SNDFILE_VERSION=$(pkg-config --modversion sndfile)
  echo " yes"
fi


#########################################
#  fail if any lib package is needed
#########################################

case "$pkg_lib_error" in
    1)
  AC_MSG_ERROR([see WARNING(s) above: configure failed.
])
    ;;
esac



#########################################
#  get library gtkmm compiler options
#########################################

AC_DEFINE_UNQUOTED(GTKMM_VERSION, "$GTKMM_VERSION", 
  [The version of gtkmm we're linking @TARNAME@ with.])
GTKMM_CFLAGS=$(pkg-config --cflags gtkmm-2.0)
AC_SUBST(GTKMM_CFLAGS)
GTKMM_LIBS=$(pkg-config --libs gtkmm-2.0)
AC_SUBST(GTKMM_LIBS)


#########################################
#  get library sndfile compiler options
#########################################

AC_DEFINE_UNQUOTED(SNDFILE_VERSION, "$SNDFILE_VERSION", 
  [The version of lib sndfile we're linking @TARNAME@ with.])
SNDFILE_CFLAGS=$(pkg-config --cflags sndfile)
AC_SUBST(SNDFILE_CFLAGS)
SNDFILE_LIBS=$(pkg-config --libs sndfile)
AC_SUBST(SNDFILE_LIBS)


# extra variables

RELEASE_DATE="@RELEASE_DATE@"
# put RELEASE_DATE in Makefile
AC_SUBST(RELEASE_DATE)
# put RELEASE_DATE in config.h
AC_DEFINE_UNQUOTED(RELEASE_DATE, "$RELEASE_DATE",
 [The date on which the @PACKAGE@ (@TARNAME@)\
 release was generated.])

HOMEPAGE="@HOMEPAGE@"
# put HOMEPAGE in Makefile
AC_SUBST(HOMEPAGE)
# put HOMEPAGE in config.h
AC_DEFINE_UNQUOTED(HOMEPAGE, "$HOMEPAGE",
 [The @PACKAGE@ (@TARNAME@) home-page.])

CONFIGURE_DATE="`date`"
# put CONFIGURE_DATE in the Makefiles
AC_SUBST(CONFIGURE_DATE)
# put CONFIGURE_DATE in config.h
AC_DEFINE_UNQUOTED(CONFIGURE_DATE, "$CONFIGURE_DATE",
 [The date on which the @PACKAGE@ (@TARNAME@) was\
 configured by running the GNU Autotools autoconf configure script.])

VERSION_MAJOR=@VERSION_MAJOR@
AC_SUBST(VERSION_MAJOR)
AC_DEFINE_UNQUOTED(VERSION_MAJOR, $VERSION_MAJOR,
 [@PACKAGE@ major version number])

VERSION_MINOR=@VERSION_MINOR@
AC_SUBST(VERSION_MINOR)
AC_DEFINE_UNQUOTED(VERSION_MINOR, $VERSION_MINOR,
 [@PACKAGE@ minor version number])

VERSION_MICRO=@VERSION_MICRO@
AC_SUBST(VERSION_MICRO)
AC_DEFINE_UNQUOTED(VERSION_MICRO, $VERSION_MICRO,
 [@PACKAGE@ macro version number])

EBUILD_CATEGORY_DIR=@EBUILD_CATEGORY_DIR@
AC_SUBST(EBUILD_CATEGORY_DIR)
AC_DEFINE_UNQUOTED(EBUILD_CATEGORY_DIR, "$EBUILD_CATEGORY_DIR",
 [Gentoo ebuild category for @PACKAGE@ (@TARNAME@).\
 The Gentoo ebuild files for @TARNAME@\
 will go in @EBUILD_CATEGORY_DIR@/@TARNAME@/\
 in the portage root directory.])



AC_CONFIG_FILES([
Makefile
])

AC_OUTPUT

# you can add spew here
#echo "configure done"

AC_MSG_RESULT([
  done configuring: $PACKAGE_NAME   version $VERSION

     Linking with lib gtkmm version:    $GTKMM_VERSION
     Linking with lib sndfile version:  $SNDFILE_VERSION

     C++ Compiler:           $CXX $CXXFLAGS
     Source Directory:       $srcdir
     Installation prefix:    $prefix
])